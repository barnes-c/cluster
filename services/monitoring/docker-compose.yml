services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    labels:
      - com.centurylinklabs.watchtower.scope=infrastructure
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
      - "--log.level=debug"
    ports:
      - "9090:9090"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    container_name: grafana
    labels:
      - com.centurylinklabs.watchtower.scope=infrastructure
    environment:
      GF_FEATURE_TOGGLES_ENABLE: externalServiceAccounts
      GF_INSTALL_PLUGINS: grafana-strava-datasource
      GF_PLUGIN_APP_CLIENT_SECRET: ${GF_PLUGIN_APP_CLIENT_SECRET}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER}
      GF_SERVER_DOMAIN: "monitoring.barnes.biz"
      GF_SERVER_ROOT_URL: "https://monitoring.barnes.biz"
      GF_PROVISIONING_EXPAND_ENV_VARS: "true"
      GF_USERS_ALLOW_SIGN_UP: "false"
      STRAVA_CLIENT_ID: ${STRAVA_CLIENT_ID}
      STRAVA_CLIENT_SECRET: ${STRAVA_CLIENT_SECRET}
      STRAVA_REFRESH_TOKEN: ${STRAVA_REFRESH_TOKEN}
      LETSENCRYPT_EMAIL: noreply@barnes.biz
      LETSENCRYPT_HOST: monitoring.barnes.biz
      VIRTUAL_HOST: monitoring.barnes.biz
      VIRTUAL_PORT: 3000
    ports:
      - "3000:3000"
    volumes:
      - ./1-refreshToken:/var/lib/grafana/strava-datasource/refreshToken:ro
      - ./grafana/conf/grafana.ini:/etc/grafana/conf/grafana.ini:ro
      - ./grafana/provisioning/:/etc/grafana/provisioning/:ro
      - ./grafana/provisioning/plugins:/usr/share/grafana/plugins-bundled:ro
      - grafana_data:/var/lib/grafana
    networks:
      - monitoring
      - internet

  node-exporter:
    image: prom/node-exporter
    container_name: node-prometheus-exporter
    labels:
      - com.centurylinklabs.watchtower.scope=infrastructure
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    ports:
      - "9100:9100"
    networks:
      - monitoring
    depends_on:
      - prometheus

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    labels:
      - com.centurylinklabs.watchtower.scope=infrastructure
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:ro"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
      - "/dev/disk/:/dev/disk:ro"
    command:
      - "-docker_only=true"
      - "--global_housekeeping_interval=1m0s"
      - "--housekeeping_interval=15s"
      - "-disable_metrics=udp,advtcp,sched,hugetlb,referenced_memory,tcp,process,cpu_topology,resctrl,memory_numa,diskIO"
    devices:
      - /dev/kmsg
    expose:
      - 8080
    networks:
      - monitoring
    restart: unless-stopped

  redis:
    image: redis
    container_name: prometheus-redis
    labels:
      - com.centurylinklabs.watchtower.scope=infrastructure
    ports:
      - 6379:6379
    networks:
      - monitoring

  blackbox-prometheus-exporter:
    image: prom/blackbox-exporter
    container_name: blackbox-prometheus-exporter
    labels:
      - com.centurylinklabs.watchtower.scope=infrastructure
    volumes:
      - ./blackbox-config.yml:/etc/blackbox_exporter/config.yml
    networks:
      - monitoring
      - internet
    restart: unless-stopped
    depends_on:
      - prometheus

networks:
  monitoring:
    external: true
  internet:
    external: true

volumes:
  grafana_data:
    name: grafana_data
  prometheus_data:
    name: prometheus_data
